<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on DaoyiSite</title>
    <link>https://blog.daotoyi.github.io/categories/github.html</link>
    <description>Recent content in Github on DaoyiSite</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 18 Nov 2023 12:10:00 +0000</lastBuildDate><atom:link href="https://blog.daotoyi.github.io/categories/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git commit 规范</title>
      <link>https://blog.daotoyi.github.io/post/github-git-commit-standara.html</link>
      <pubDate>Sat, 18 Nov 2023 12:10:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/github-git-commit-standara.html</guid>
      <description>type 为必填项，用于指定 commit 的类型，约定了 feat、fix 两个主要 type，以及 docs、style、build、perf、refactor、re</description>
    </item>
    
    <item>
      <title>Git 访问</title>
      <link>https://blog.daotoyi.github.io/post/git-access.html</link>
      <pubDate>Sun, 23 Oct 2022 10:10:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/git-access.html</guid>
      <description>由于网络原因, 一般情况无访问，可参考修改主机映射： /etc/host 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 140.82.114.25 alive.github.com 140.82.112.25 live.github.com 185.199.108.154 github.githubassets.com 140.82.112.22 central.github.com 185.199.108.133 desktop.githubusercontent.com</description>
    </item>
    
    <item>
      <title>Git/GitHub/GitLab</title>
      <link>https://blog.daotoyi.github.io/post/git-github-gitlab.html</link>
      <pubDate>Thu, 23 Jun 2022 15:20:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/git-github-gitlab.html</guid>
      <description>简介 Git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持</description>
    </item>
    
    <item>
      <title>Git tag</title>
      <link>https://blog.daotoyi.github.io/post/git-tag.html</link>
      <pubDate>Fri, 10 Jun 2022 21:00:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/git-tag.html</guid>
      <description>tag git 标签分为两种类型 轻量标签 轻量标签是指向提交对象的引用 附注标签 附注标签则是仓库中的一个独立对象。 建议使用附注标签 bash https://metabits.tk/wp-adminic 1 2 3 4 5 6 7 8 9 10 git</description>
    </item>
    
    <item>
      <title>Git 撤销 commit 和 push 并清除记录</title>
      <link>https://blog.daotoyi.github.io/post/git-checkout-commit&#43;push.html</link>
      <pubDate>Sun, 01 May 2022 19:05:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/git-checkout-commit&#43;push.html</guid>
      <description>git reset &amp;lt;版本号&amp;gt; —— 回退到指定版本。指定的版本号可通过 git log 查看 注：不需要携带&amp;ndash;hard，可使用&amp;ndash;soft 使</description>
    </item>
    
    <item>
      <title>Git 常用操作</title>
      <link>https://blog.daotoyi.github.io/post/git-common-manual.html</link>
      <pubDate>Sun, 27 Mar 2022 23:17:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/git-common-manual.html</guid>
      <description>常用命令 常用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # 工作区 -&amp;gt; 暂存区 $ git add &amp;lt;file/dir&amp;gt; # 暂存区 -&amp;gt; 本地仓库 $ git commit -m &amp;#34;some info&amp;#34; # 本地仓库 -&amp;gt;</description>
    </item>
    
    <item>
      <title>Git Pull 强制覆盖</title>
      <link>https://blog.daotoyi.github.io/post/git-pull-force.html</link>
      <pubDate>Sat, 26 Mar 2022 09:48:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/git-pull-force.html</guid>
      <description>不保留本地文件 1 2 git fetch origin master git reset --hard origin/master “git pull”如何强制覆盖本地文件？ 保留本地文件 1 2 3 4 git fetch origin main git stash git reset --hard origin/main git stash pop 冲突文件会在文件中展</description>
    </item>
    
    <item>
      <title>Git stash</title>
      <link>https://blog.daotoyi.github.io/post/git-stash.html</link>
      <pubDate>Sat, 26 Mar 2022 09:17:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/git-stash.html</guid>
      <description>git stash 命令用于将更改储藏在脏工作目录中。 useage 1 2 3 4 5 6 7 git stash # git stash save git stash list # 列出 git stash show # 进行检查 git stash apply # 恢复 git stash apply stash@{2} git stash drop stash@{2} # 移除储藏 git stash pop #</description>
    </item>
    
    <item>
      <title>Github Actions</title>
      <link>https://blog.daotoyi.github.io/post/github-actions.html</link>
      <pubDate>Sat, 19 Mar 2022 22:33:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/github-actions.html</guid>
      <description>GitHub Actions入门教程：自动化部署静态博客 example 将博客原文档推送给 github 的仓库 repo1. Github Actions 接收到 push 请求后，按以下配置将生成的静态内容推送给 github 的仓库 rep</description>
    </item>
    
    <item>
      <title>Github 推送验证</title>
      <link>https://blog.daotoyi.github.io/post/github-access-verification-with-token.html</link>
      <pubDate>Sat, 19 Mar 2022 13:00:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/github-access-verification-with-token.html</guid>
      <description>采用 token 进行认证访问 重新设置远程仓库 1 2 git remote rm origin git remote add origin https://hao203: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@github.com/hao203/Demo.git 修改远程仓库（recommend） 1 2 3 4 5 6 git remote set-url origin https://&amp;lt;user_ame&amp;gt;:token@github.com/&amp;lt;user_name&amp;gt;/&amp;lt;repo_name&amp;gt;.git # or git remote set-url origin https://&amp;lt;token&amp;gt;@github.com/&amp;lt;user_name&amp;gt;/&amp;lt;repo_name&amp;gt;.git # example git remote set-url origin https://hao203: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@github.com/hao203/Demo.git</description>
    </item>
    
    <item>
      <title>Github Profile</title>
      <link>https://blog.daotoyi.github.io/post/github-profile-show-stats-language-and-metrics.html</link>
      <pubDate>Sat, 19 Mar 2022 10:51:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/github-profile-show-stats-language-and-metrics.html</guid>
      <description>Metrics !Metrics 统计卡片 stats !Anurag&amp;rsquo;s GitHub stats theme dark, radical, merko, gruvbox, tokyonight, onedark, cobalt, synthwave, highcontrast, dracula language ![这里写昵称&amp;rsquo;s Most used languages](https://github-readme-stats.vercel.app/api/top-langs?username=%E8%BF%99%E9%87%8C%E6%9B%BF%E6%8D%A2%E6%88%90%E4%BD%A0%E7%9A%84 GitHub ID&amp;amp;show_icons=true&amp;amp;count_private=true&amp;amp;theme=gotham) !daotoyi&amp;rsquo;s Most used languages 统计卡片并列显示 stats 和 language 卡片要紧接着写,不能空格换</description>
    </item>
    
    <item>
      <title>Github 图床显示图片</title>
      <link>https://blog.daotoyi.github.io/post/github-picsbed-show-pictures.html</link>
      <pubDate>Wed, 16 Mar 2022 00:30:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/github-picsbed-show-pictures.html</guid>
      <description>Github/Gitee 格式 可显示的链接格式: https://raw.githubusercontent.com/UserName/RepoName/BranchName/ 如:https://raw.githubusercontent.com/daotoyi/picsbed/main/</description>
    </item>
    
    <item>
      <title>Git submodule VS subtree</title>
      <link>https://blog.daotoyi.github.io/post/git-submodule-vs-subtree.html</link>
      <pubDate>Sat, 12 Feb 2022 09:49:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/git-submodule-vs-subtree.html</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;TODO&amp;rdquo; [2022-02-12 周六 09:49] 仓库共用 两种子仓库使用方式 git submodule(子模块) git subtree(子树合并) git subtree 本质就是把子项目目录作为一个普通的文</description>
    </item>
    
    <item>
      <title>Github Pages 托管静态网页绑定自定义域名</title>
      <link>https://blog.daotoyi.github.io/post/github-pages-custome-domain-name-ssl.html</link>
      <pubDate>Mon, 07 Feb 2022 08:29:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/github-pages-custome-domain-name-ssl.html</guid>
      <description>Git Pages 只能为每个 GitHub 帐户创建一个用户或组织站点；而项目站点没有限制。 用户或组织站点 新建 username.github.io 仓库，将静态网页文件所在分支托管到 Github Pages。 项目站点</description>
    </item>
    
    <item>
      <title>Github App 及 OAuth</title>
      <link>https://blog.daotoyi.github.io/post/oauth.html</link>
      <pubDate>Sat, 05 Feb 2022 08:28:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/oauth.html</guid>
      <description>令牌与密码 令牌（token）与密码（password）的作用是一样的，都可以进入系统，但是有三点差异。 令牌是短期的，到期会自动失效，用户自己</description>
    </item>
    
    <item>
      <title>Git FAQ</title>
      <link>https://blog.daotoyi.github.io/post/github-mannal-issues.html</link>
      <pubDate>Sat, 05 Feb 2022 08:25:00 +0000</pubDate>
      
      <guid>https://blog.daotoyi.github.io/post/github-mannal-issues.html</guid>
      <description>fatal: in unpopulated submodule XXX 若是直接从 github 中下载到对应的项目，直接放到自己的版本控制中，在提交就会报此错误 fatal: in unpopulated submodule. 即使删除了.git 文件也是没用的。 解决办法: 1</description>
    </item>
    
  </channel>
</rss>
